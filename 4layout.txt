4. Design an Android application to demonstrate different types of layouts?
Program:
FrameLayout.java
package com.example.layouts;
import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
public class FrameLayout extends Activity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_frame_layout);
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.frame_layout, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}
GridViewActivity.java
package com.example.layouts;
import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.GridView;
import android.widget.Toast;
public class GridViewActivity extends Activity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_grid_view);
 // import android.widget.GridView;
 GridView gridview = (GridView) findViewById(R.id.gridView);
 gridview.setAdapter(new ImageAdapter(this));
 gridview.setOnItemClickListener(new AdapterView.OnItemClickListener() {
 public void onItemClick(AdapterView<?> parent, View v, int position, long id) {
 // import android.widget.Toast;
 Toast.makeText(GridViewActivity.this, "" + position, Toast.LENGTH_SHORT).show();
 }
 });
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.grid_view, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}

ImageAdapter.java
package com.example.layouts;
import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
public class ImageAdapter extends BaseAdapter {
 private Context context;
 public ImageAdapter(Context c) {
 context = c;
 }
 public int getCount() {
 return imageIds.length;
 }
 public Object getItem(int position) {
 return null;
 }
 public long getItemId(int position) {
 return 0;
 }
 // create a new ImageView per image item
 public View getView(int position, View convertView, ViewGroup parent) {
 ImageView imageView;
 if (convertView == null) {
 imageView = new ImageView(context);
 imageView.setLayoutParams(new GridView.LayoutParams(150, 150));
 imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
 imageView.setPadding(10, 10, 10, 10);
 } else {
 imageView = (ImageView) convertView;
 }
 imageView.setImageResource(imageIds[position]);
 return imageView;
 }
 private Integer[] imageIds = {
 R.drawable.photo_1, R.drawable.photo_2,
 R.drawable.photo_3, R.drawable.photo_4,
 R.drawable.photo_5, R.drawable.photo_6,
 R.drawable.photo_7, R.drawable.photo_8,
 R.drawable.photo_1, R.drawable.photo_2,
 R.drawable.photo_3, R.drawable.photo_4,
 R.drawable.photo_5, R.drawable.photo_6,
 R.drawable.photo_7, R.drawable.photo_8,
 R.drawable.photo_1, R.drawable.photo_2,
 R.drawable.photo_3, R.drawable.photo_4,
 R.drawable.photo_5, R.drawable.photo_6,
 R.drawable.photo_7, R.drawable.photo_8,
 R.drawable.photo_1, R.drawable.photo_2,
 R.drawable.photo_3, R.drawable.photo_4,
 R.drawable.photo_5, R.drawable.photo_6,
 R.drawable.photo_7
 };
}
LinearLayout.java
package com.example.layouts;
import android.app.Activity;
import android.content.Context;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.CheckBox;
import android.widget.RadioButton;
import android.widget.Spinner;
import android.widget.Toast;
import android.widget.ToggleButton;
//import android.widget.AdapterView;
public class LinearLayout extends Activity implements AdapterView.OnItemSelectedListener {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_linear_layout);
 // import android.widget.AutoCompleteTextView;
 AutoCompleteTextView autoCompleteTextView = (AutoCompleteTextView)
 findViewById(R.id.autoCompleteTextView);
 ArrayAdapter adapter1 = ArrayAdapter.createFromResource(this,
 R.array.zodiac, android.R.layout.select_dialog_item);
 autoCompleteTextView.setThreshold(1);
 autoCompleteTextView.setAdapter(adapter1);
 // import android.widget.Spinner;
 Spinner spinner = (Spinner) findViewById(R.id.zodiac_spinner);
 // set a listener on spinner
 spinner.setOnItemSelectedListener(this);
 // import android.widget.ArrayAdapter;
 // populate the spinner from data source
 ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
 R.array.zodiac, android.R.layout.simple_spinner_item);
 adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
 spinner.setAdapter(adapter);
 }
 public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
 String selectedItem = parent.getItemAtPosition(position).toString();
 Toast.makeText(parent.getContext(), selectedItem, Toast.LENGTH_SHORT).show();
 }
 public void onNothingSelected(AdapterView<?> parent) {
 // Another interface callback
 }
 public void onCheckboxClicked(View view) {
 // import android.content.Context;
 Context context = getApplicationContext();
 // import android.widget.Toast;
 int duration = Toast.LENGTH_SHORT;
 // import android.widget.CheckBox;
 CheckBox chkJogging = (CheckBox) findViewById(R.id.chkJogging);
 CheckBox chkSwimming = (CheckBox) findViewById(R.id.chkSwimming);
 CheckBox chkCoding = (CheckBox) findViewById(R.id.chkCoding);
 CheckBox chkWriting = (CheckBox) findViewById(R.id.chkWriting);
 StringBuilder sb = new StringBuilder();
 if (chkJogging.isChecked()) {
 sb.append(", " + chkJogging.getText());
 }
 if (chkSwimming.isChecked()) {
sb.append(", " + chkSwimming.getText());
 }
 if (chkCoding.isChecked()) {
 sb.append(", " + chkCoding.getText());;
 }
 if (chkWriting.isChecked()) {
 sb.append(", " + chkWriting.getText());
 }
 if (sb.length() > 0) { // No toast if the string is empty
 // Remove the first comma
 String output = sb.deleteCharAt(sb.indexOf(",")).toString();
 // A small pop up box that contains a message for a limited amount of time
 Toast toast = Toast.makeText(context, output, duration);
 toast.show();
 }
 }
 public void onRadioButtonClicked(View view) {
 // import android.widget.RadioButton;
 RadioButton radio = (RadioButton) view;
 boolean checked = radio.isChecked();
 if (checked){
 // import android.content.Context;
 Context context = getApplicationContext();
 int duration = Toast.LENGTH_SHORT;
 String output = radio.getText().toString();
 // import android.widget.Toast;
 Toast toast = Toast.makeText(context, output, duration);
 toast.show();
 }
 }
 public void onToggleClicked(View view) {
 // import android.widget.ToggleButton;
 boolean on = ((ToggleButton) view).isChecked();
 //import android.net.wifi.WifiManager;
 WifiManager wifiManager = (WifiManager) this.getSystemService(Context.WIFI_SERVICE);
 if (on && !wifiManager.isWifiEnabled()) {
 wifiManager.setWifiEnabled(true);
 } else if (!on && wifiManager.isWifiEnabled()) {
 wifiManager.setWifiEnabled(false);
 }
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.linear_layout, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}
ListViewLayout.java
package com.example.layouts;
import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.ArrayAdapter;
import android.widget.ListView;
public class ListViewLayout extends Activity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_list_view);
 // import android.widget.ArrayAdapter;
 ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
 R.array.zodiac, android.R.layout.simple_list_item_1);
 // import android.widget.ListView;
 ListView listView = (ListView) findViewById(R.id.listView);
 listView.setAdapter(adapter);
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.list_view, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}
RelativeLayout.java
package com.example.layouts;
import android.app.Activity;
import android.app.ProgressDialog;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
public class RelativeLayout extends Activity {
 ProgressDialog progress;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_relative_layout);
 }
 public void showProgress(View view){
 progress = new ProgressDialog(this);
 progress.setMessage("Coming soon...");
 progress.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
 progress.show();
 final int maxDuration = 100;
 final Thread thread = new Thread(){
 @Override
 public void run(){
 int timeElapsed = 0;
 while(timeElapsed < maxDuration){
 try {
 sleep(500);
 timeElapsed += 5;
 progress.setProgress(timeElapsed);
 } catch (InterruptedException e) {
 e.printStackTrace();
 }
 }
 }
 };
 thread.start();
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.relative_layout, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}
TableLayout.java
package com.example.layouts;
import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
public class TableLayout extends Activity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_table_layout);
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.table_layout, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}
MainActivity.java
package com.example.layouts;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
public class MainActivity extends Activity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 }
 /**
 * Called when the user touches the button
 */
 public void getRelativeLayoutPage(View view) {
 Intent intent = new Intent(getApplicationContext(), RelativeLayout.class);
 startActivity(intent);
 }
 /**
 * Called when the user touches the button
 */
 public void getTableLayoutPage(View view) {
 Intent intent = new Intent(getApplicationContext(), TableLayout.class);
 startActivity(intent);
 }
 public void getFrameLayoutPage(View view) {
 Intent intent = new Intent(getApplicationContext(), FrameLayout.class);
 startActivity(intent);
 }
 /**
 * Called when the user touches the button
 */
 public void getLinearLayoutPage(View view) {
 Intent intent = new Intent(getApplicationContext(), LinearLayout.class);
 startActivity(intent);
 }
 /**
 * Called when the user touches the button
 */
 public void getListViewPage(View view) {
 Intent intent = new Intent(getApplicationContext(), ListViewLayout.class);
 startActivity(intent);
 }
 public void getGridViewPage(View view) {
 Intent intent = new Intent(getApplicationContext(), GridViewActivity.class);
 startActivity(intent);
 }
 @Override
 public boolean onCreateOptionsMenu(Menu menu) {
 // Inflate the menu; this adds items to the action bar if it is present.
 getMenuInflater().inflate(R.menu.main, menu);
 return true;
 }
 @Override
 public boolean onOptionsItemSelected(MenuItem item) {
 // Handle action bar item clicks here. The action bar will
 // automatically handle clicks on the Home/Up button, so long
 // as you specify a parent activity in AndroidManifest.xml.
 int id = item.getItemId();
 if (id == R.id.action_settings) {
 return true;
 }
 return super.onOptionsItemSelected(item);
 }
}
activity_frame_layout.xml
<FrameLayout
 android:layout_width="fill_parent"
 android:layout_height="fill_parent"
 xmlns:android="http://schemas.android.com/apk/res/android">
 <ImageView
 android:layout_width="228dp"
 android:layout_height="228dp"
 android:id="@+id/imageView"
 android:layout_gravity="center"
 android:src="@drawable/ic_launcher" />
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:text="I love Android!"
 android:id="@+id/textView"
 android:textSize="30sp"
 android:textStyle="bold"
 android:textColor="#112233"
 android:layout_gravity="center" />
</FrameLayout>
Activity_grid_view.xml
<GridView
 xmlns:android="http://schemas.android.com/apk/res/android"
 android:id="@+id/gridView"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:columnWidth="100dp"
 android:numColumns="auto_fit"
 android:verticalSpacing="10dp"
 android:horizontalSpacing="10dp"
 android:stretchMode="columnWidth"
 android:gravity="center" />
activity_linear_layout.xml
<LinearLayout
 android:orientation="vertical"
 android:layout_width="fill_parent"
 android:layout_height="fill_parent"
 xmlns:android="http://schemas.android.com/apk/res/android">
 <LinearLayout
 android:orientation="horizontal"
 android:layout_width="match_parent"
 android:layout_height="wrap_content">
 <CheckBox
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/jogging"
 android:id="@+id/chkJogging"
 android:onClick="onCheckboxClicked"
 android:checked="false" />
 <CheckBox
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/swimming"
 android:id="@+id/chkSwimming"
 android:onClick="onCheckboxClicked"
 android:checked="false" />
 <CheckBox
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/coding"
 android:id="@+id/chkCoding"
 android:onClick="onCheckboxClicked"
 android:checked="false" />
 <CheckBox
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/writing"
 android:id="@+id/chkWriting"
 android:onClick="onCheckboxClicked"
 android:checked="false" />
 </LinearLayout>
 <RadioGroup
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:orientation="horizontal">
 <RadioButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/female"
 android:id="@+id/radFemale"
 android:onClick="onRadioButtonClicked"
 android:checked="false" />
 <RadioButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/male"
 android:id="@+id/radMale"
 android:onClick="onRadioButtonClicked"
 android:checked="false" />
 </RadioGroup>
 <ToggleButton
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/toggleButton"
 android:textOn="@string/wifi_on"
 android:textOff="@string/wifi_off"
 android:onClick="onToggleClicked" />
 <Spinner
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:id="@+id/zodiac_spinner" />
 <AutoCompleteTextView
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:id="@+id/autoCompleteTextView" />
</LinearLayout>
activity_list_view.xml
<ListView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 xmlns:android="http://schemas.android.com/apk/res/android"
 android:id="@+id/listView"
 android:padding="20dp" />
Activity_main.xml
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
 android:orientation="vertical"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:layout_margin="@dimen/activity_vertical_margin"
 android:background="#ffb9d7ff">
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="@string/linear_layout"
 android:drawableTop="@drawable/ic_launcher"
 android:onClick="getLinearLayoutPage"
 android:id="@+id/button" />
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="@string/relative_layout"
 android:onClick="getRelativeLayoutPage"
 android:id="@+id/button2" />
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="@string/table_layout"
 android:onClick="getTableLayoutPage"
 android:id="@+id/button3" />
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="@string/framelayout"
 android:onClick="getFrameLayoutPage"
 android:id="@+id/button6" />
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="@string/list_view"
 android:onClick="getListViewPage"
 android:id="@+id/button4" />
 <Button
 android:layout_width="match_parent"
 android:layout_height="wrap_content"
 android:text="@string/grid_view"
 android:onClick="getGridViewPage"
 android:id="@+id/button5" />
</LinearLayout>
Activity_relative_layout.xml
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 android:paddingLeft="@dimen/activity_horizontal_margin"
 android:paddingRight="@dimen/activity_horizontal_margin"
 android:paddingTop="@dimen/activity_vertical_margin"
 android:paddingBottom="@dimen/activity_vertical_margin"
 tools:context="com.example.layouts.RelativeLayout">
 <TextView
 android:text="@string/hello_world"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/textView2" />
 <Button
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:id="@+id/button2"
 android:layout_below="@+id/textView2"
 android:layout_toRightOf="@+id/textView2"
 android:layout_toEndOf="@+id/textView2"
 android:background="@drawable/button_custom"
 android:layout_marginLeft="23dp"
 android:layout_marginStart="23dp"
 android:layout_marginTop="48dp" />
 <Button
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Show Progress..."
 android:onClick="showProgress"
 android:id="@+id/button"
 android:layout_alignParentBottom="true"
 android:layout_alignParentRight="true"
 android:layout_alignParentEnd="true"
 android:layout_marginRight="68dp"
 android:layout_marginEnd="68dp"
 android:layout_marginBottom="130dp" />
</RelativeLayout>
activity_table_layout.xml
<TableLayout
 android:layout_width="fill_parent"
 android:layout_height="fill_parent"
 xmlns:android="http://schemas.android.com/apk/res/android">
 <TableRow
 android:layout_width="fill_parent"
 android:layout_height="fill_parent">
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:textAppearance="?android:attr/textAppearanceLarge"
 android:text="@string/sign_in"
 android:id="@+id/textView2"
 android:textIsSelectable="true"
 android:textColorHighlight="#00FF00"
 android:layout_column="0" />
 </TableRow>
 <TableRow
 android:layout_width="fill_parent"
 android:layout_height="fill_parent">
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:textAppearance="?android:attr/textAppearanceMedium"
 android:text="@string/email"
 android:id="@+id/textView8"
 android:layout_column="0" />
 <EditText
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:inputType="textEmailAddress"
 android:ems="10"
 android:id="@+id/editText"
 android:layout_column="1"
 android:hint="@string/email" />
 </TableRow>
 <TableRow
 android:layout_width="fill_parent"
 android:layout_height="fill_parent">
 <TextView
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:textAppearance="?android:attr/textAppearanceMedium"
 android:text="@string/password"
 android:id="@+id/textView9"
 android:layout_column="0" />
 <EditText
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:inputType="textPassword"
 android:ems="10"
 android:id="@+id/editText2"
 android:layout_column="1"
 android:hint="@string/password" />
 </TableRow>
 <TableRow
 android:layout_width="fill_parent"
 android:layout_height="fill_parent">
 <Button
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="@string/let_me_in"
 android:id="@+id/button5"
 android:layout_column="1" />
 </TableRow>
</TableLayout>
frame_layout.xml
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context="com.example.layouts.FrameLayout" >
 <item android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
grid_view.xml
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context="com.example.layouts.GridViewActivity" >
 <item android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
Linear_layout.xml
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context="com.example.layouts.LinearLayout" >
 <item android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
List_view.xml
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context="com.example.layouts.ListViewLayout" >
 <item android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
main.xml
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context=".MainActivity">
 <item
 android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
relative_layout.xml:
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context="com.example.layouts.RelativeLayout">
 <item
 android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
table_layout.xml:
<menu xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:app="http://schemas.android.com/apk/res-auto"
 xmlns:tools="http://schemas.android.com/tools"
 tools:context="com.example.layouts.TableLayout">
 <item
 android:id="@+id/action_settings"
 android:title="@string/action_settings"
 android:orderInCategory="100"
 app:showAsAction="never" />
</menu>
Strings.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
 <string name="app_name">Android UIs</string>
 <string name="hello_world">Hello world!</string>
 <string name="action_settings">Settings</string>
 <string name="title_activity_relative_layout">RelativeLayout</string>
 <string name="title_activity_table_layout">TableLayout</string>
 <string name="sign_in">Sign In &#8230;</string>
  <string name="email">Email</string>
 <string name="password">Password</string>
 <string name="let_me_in">Let me in!</string>
 <string name="linear_layout">LinearLayout</string>
 <string name="relative_layout">RelativeLayout</string>
 <string name="table_layout">TableLayout</string>
 <string name="list_view">ListView</string>
 <string name="grid_view">GridView</string>
 <string name="jogging">Jogging</string>
 <string name="swimming">Swimming</string>
 <string name="coding">Coding</string>
 <string name="writing">Writing</string>
 <string name="pickers">Pickers</string>
 <string name="title_activity_linear_layout">LinearLayout</string>
 <string name="female">Female</string>
 <string name="male">Male</string>
 <string name="wifi_on">WiFi On</string>
 <string name="wifi_off">WiFi Off</string>
 <string-array name="zodiac">
 <item>Aries</item>
 <item>Taurus</item>
 <item>Gemini</item>
 <item>Cancer</item>
 <item>Leo</item>
 <item>Virgo</item>
 <item>Libra</item>
 <item>Scorpio</item>
 <item>Sagittarius</item>
 <item>Capricorn</item>
 <item>Aquarius</item>
 <item>Pisces</item>
 </string-array>
 <string name="title_activity_list_view">ListView</string>
 <string name="title_activity_grid_view">GridViewActivity</string>
 <string name="title_activity_frame_layout">FrameLayout</string>
 <string name="framelayout">FrameLayout</string>
</resources>
